name: "Build & Release"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Release
    runs-on: macos-latest
    timeout-minutes: 30

    env:
      ANDROID_ARCH: x86_64
      ANDROID_TARGET: google_apis_playstore
      API_LEVEL: 33
      ANDROID_BUILD_TOOLS_VERSION: 33.0.2
      EMULATOR_NAME: nexus
      EMULATOR_TIMEOUT: 350

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Flutter Setup
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Install dependencies
        run: flutter pub get

      - name: Auto format the dart code
        run: dart format .

      - name: Verify the dart code is formatted
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze the dart code
        run: flutter analyze --fatal-warnings

      # Install Android SDK packages & emulator system image
      - name: Install Android SDK Packages
        run: |
          echo "y" | sdkmanager --licenses
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-${{ env.API_LEVEL }}" \
            "build-tools;${{ env.ANDROID_BUILD_TOOLS_VERSION }}" \
            "system-images;android-${{ env.API_LEVEL }};${{ env.ANDROID_TARGET }};${{ env.ANDROID_ARCH }}" \
            "emulator" 

      # Create emulator
      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd \
            --name $EMULATOR_NAME \
            --package "system-images;android-${API_LEVEL};${ANDROID_TARGET};${ANDROID_ARCH}" \
            --abi ${ANDROID_ARCH} \
            --device "pixel"

      # Start emulator (headless, no audio/snapshot)
      - name: Start Emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd $EMULATOR_NAME -no-snapshot -noaudio -no-boot-anim -camera-back none -gpu swiftshader_indirect &
          adb wait-for-device
          adb shell input keyevent 82

      - name: Wait for emulator to boot
        run: |
          adb devices
          # Loop until boot complete
          boot_completed=""
          until [[ "$boot_completed" == "1" ]]; do
            sleep 5
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            echo "Boot status: $boot_completed"
          done
          adb shell settings put global window_animation_scale 0 &
          adb shell settings put global transition_animation_scale 0 &
          adb shell settings put global animator_duration_scale 0 &

      # Run Flutter integration tests
      - name: Run Integration Tests
        run: |
          flutter drive \
            --driver=test_driver/integration_test.dart \
            --target=integration_test/app_test.dart        

      - name: Build APK
        run: flutter build apk --release --split-per-abi

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}