name: Flutter App on Emulator

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Run Flutter analyze
        run: flutter analyze

      - name: Run Flutter tests
        run: flutter test

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install Android SDK components
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-34"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-34;google_apis;x86_64"
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "emulator"

      - name: Create Android emulator
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
            --force \
            --name test_emulator \
            --abi google_apis/x86_64 \
            --package 'system-images;android-34;google_apis;x86_64' \
            --device "Nexus 6"

      - name: Start Android emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd test_emulator -no-snapshot -no-window -no-boot-anim -no-audio -gpu swiftshader_indirect &

      - name: Wait for emulator to boot
        run: |
          # Wait for emulator to be ready
          timeout 300 bash -c 'until $ANDROID_HOME/platform-tools/adb shell getprop sys.boot_completed | grep -m 1 "1"; do sleep 10; done'
          $ANDROID_HOME/platform-tools/adb devices

      - name: Build Flutter app for Android
        run: flutter build apk --debug

      - name: Install and run app on emulator
        run: |
          flutter install
          # Optional: You can also run integration tests here
          # flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart

      - name: Take screenshot (optional)
        run: |
          $ANDROID_HOME/platform-tools/adb exec-out screencap -p > screenshot.png

      - name: Upload screenshot artifact (optional)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: emulator-screenshot
          path: screenshot.png
          retention-days: 7
